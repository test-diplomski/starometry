// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: external_metrics.proto

package external

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ExternalMetrics_ExternalLatestMetrics_FullMethodName = "/proto.ExternalMetrics/ExternalLatestMetrics"
)

// ExternalMetricsClient is the client API for ExternalMetrics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ExternalMetricsClient interface {
	ExternalLatestMetrics(ctx context.Context, in *ExternalLatestMetricsReq, opts ...grpc.CallOption) (*ExternalMetricsArray, error)
}

type externalMetricsClient struct {
	cc grpc.ClientConnInterface
}

func NewExternalMetricsClient(cc grpc.ClientConnInterface) ExternalMetricsClient {
	return &externalMetricsClient{cc}
}

func (c *externalMetricsClient) ExternalLatestMetrics(ctx context.Context, in *ExternalLatestMetricsReq, opts ...grpc.CallOption) (*ExternalMetricsArray, error) {
	out := new(ExternalMetricsArray)
	err := c.cc.Invoke(ctx, ExternalMetrics_ExternalLatestMetrics_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalMetricsServer is the server API for ExternalMetrics service.
// All implementations must embed UnimplementedExternalMetricsServer
// for forward compatibility
type ExternalMetricsServer interface {
	ExternalLatestMetrics(context.Context, *ExternalLatestMetricsReq) (*ExternalMetricsArray, error)
	mustEmbedUnimplementedExternalMetricsServer()
}

// UnimplementedExternalMetricsServer must be embedded to have forward compatible implementations.
type UnimplementedExternalMetricsServer struct {
}

func (UnimplementedExternalMetricsServer) ExternalLatestMetrics(context.Context, *ExternalLatestMetricsReq) (*ExternalMetricsArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExternalLatestMetrics not implemented")
}
func (UnimplementedExternalMetricsServer) mustEmbedUnimplementedExternalMetricsServer() {}

// UnsafeExternalMetricsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ExternalMetricsServer will
// result in compilation errors.
type UnsafeExternalMetricsServer interface {
	mustEmbedUnimplementedExternalMetricsServer()
}

func RegisterExternalMetricsServer(s grpc.ServiceRegistrar, srv ExternalMetricsServer) {
	s.RegisterService(&ExternalMetrics_ServiceDesc, srv)
}

func _ExternalMetrics_ExternalLatestMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExternalLatestMetricsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalMetricsServer).ExternalLatestMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ExternalMetrics_ExternalLatestMetrics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalMetricsServer).ExternalLatestMetrics(ctx, req.(*ExternalLatestMetricsReq))
	}
	return interceptor(ctx, in, info, handler)
}

// ExternalMetrics_ServiceDesc is the grpc.ServiceDesc for ExternalMetrics service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ExternalMetrics_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ExternalMetrics",
	HandlerType: (*ExternalMetricsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExternalLatestMetrics",
			Handler:    _ExternalMetrics_ExternalLatestMetrics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external_metrics.proto",
}
